-
  function get_fallback(path){
    const data = collections.img_collection["src"+path];
    const fb_sources = Object.values(data);
    //- First source under first format.
    const fallback = fb_sources[fb_sources.length -1][fb_sources[0].length-1];
    return fallback;
  }

mixin responsive_image(path, sizes)
  - const data = collections.img_collection["src"+path];
  - const fallback = get_fallback(path);
  picture
    each value, format in data
      - let srcset_collection = [];
      - let srcType = value[0].sourceType;
      each source in value
        - srcset_collection.push(source.srcset)
      source(type=srcType srcset=srcset_collection.toString() sizes=sizes)
    img(src=fallback.url)&attributes(attributes)